DIGEST 6c02dbeac0ac3b7413151df4848cc53d
FPoly
R180:184 Lists <> <> lib
ind 1062:1069 <> boollist
constr 1085:1092 <> bool_nil
constr 1109:1117 <> bool_cons
R1096:1103 Poly <> boollist ind
R1125:1128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1137:1140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1141:1148 Poly <> boollist ind
R1129:1136 Poly <> boollist ind
R1121:1124 Basics <> bool ind
ind 1623:1626 <> list
constr 1651:1653 <> nil
constr 1668:1671 <> cons
R1657:1660 Poly <> list ind
R1676:1679 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1686:1689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1690:1693 Poly <> list ind
R1680:1683 Poly <> list ind
R2883:2885 Poly <> nil constr
R2935:2938 Poly <> cons constr
R3720:3723 Poly <> cons constr
R3732:3735 Poly <> cons constr
R3744:3746 Poly <> nil constr
R3748:3750 Coq.Init.Datatypes <> nat ind
R3737:3739 Coq.Init.Datatypes <> nat ind
R3725:3727 Coq.Init.Datatypes <> nat ind
def 4103:4108 <> repeat
R4126:4126 Poly <> X var
R4138:4140 Coq.Init.Datatypes <> nat ind
R4145:4148 Poly <> list ind
R4150:4150 Poly <> X var
R4163:4167 Poly <> count var
R4183:4185 Poly <> nil constr
R4187:4187 Poly <> X var
R4193:4193 Coq.Init.Datatypes <> S constr
R4205:4208 Poly <> cons constr
R4215:4220 Poly <> repeat def
R4224:4224 Poly <> x var
R4222:4222 Poly <> X var
R4212:4212 Poly <> x var
R4210:4210 Poly <> X var
def 4370:4381 <> test_repeat1
R4401:4403 Coq.Init.Logic <> :type_scope:x_'='_x not
R4387:4392 Poly <> repeat def
R4394:4396 Coq.Init.Datatypes <> nat ind
R4404:4407 Poly <> cons constr
R4416:4419 Poly <> cons constr
R4428:4430 Poly <> nil constr
R4432:4434 Coq.Init.Datatypes <> nat ind
R4421:4423 Coq.Init.Datatypes <> nat ind
R4409:4411 Coq.Init.Datatypes <> nat ind
def 4594:4605 <> test_repeat2
R4630:4632 Coq.Init.Logic <> :type_scope:x_'='_x not
R4611:4616 Poly <> repeat def
R4623:4627 Basics <> false constr
R4618:4621 Basics <> bool ind
R4633:4636 Poly <> cons constr
R4650:4652 Poly <> nil constr
R4654:4657 Basics <> bool ind
R4643:4647 Basics <> false constr
R4638:4641 Basics <> bool ind
mod 4695:4707 <> MumbleGrumble
ind 4831:4836 MumbleGrumble mumble
constr 4852:4852 MumbleGrumble a
constr 4867:4867 MumbleGrumble b
constr 4899:4899 MumbleGrumble c
R4856:4861 Poly <> mumble ind
R4877:4880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4884:4887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4888:4893 Poly <> mumble ind
R4881:4883 Coq.Init.Datatypes <> nat ind
R4871:4876 Poly <> mumble ind
R4903:4908 Poly <> mumble ind
ind 4922:4928 MumbleGrumble grumble
constr 4953:4953 MumbleGrumble d
constr 4981:4981 MumbleGrumble e
R4963:4966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4967:4973 Poly <> grumble ind
R4957:4962 Poly MumbleGrumble mumble ind
R4986:4989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4990:4996 Poly <> grumble ind
R5286:5298 Poly MumbleGrumble <> mod
def 5575:5581 <> repeat'
R5595:5598 Poly <> list ind
R5600:5600 Poly <> X var
R5613:5617 Poly <> count var
R5640:5642 Poly <> nil constr
R5644:5644 Poly <> X var
R5650:5650 Coq.Init.Datatypes <> S constr
R5662:5665 Poly <> cons constr
R5672:5678 Poly <> repeat' def
R5682:5682 Poly <> x var
R5680:5680 Poly <> X var
R5669:5669 Poly <> x var
R5667:5667 Poly <> X var
R5782:5788 Poly <> repeat' def
R5844:5849 Poly <> repeat def
def 8398:8405 <> repeat''
R8419:8422 Poly <> list ind
R8424:8424 Poly <> X var
R8437:8441 Poly <> count var
R8464:8466 Poly <> nil constr
R8474:8474 Coq.Init.Datatypes <> S constr
R8486:8489 Poly <> cons constr
R8496:8503 Poly <> repeat'' def
R8507:8507 Poly <> x var
R8493:8493 Poly <> x var
def 8833:8839 <> list123
R8846:8849 Poly <> cons constr
R8858:8861 Poly <> cons constr
R8870:8873 Poly <> cons constr
R8882:8884 Poly <> nil constr
R8886:8888 Coq.Init.Datatypes <> nat ind
R8875:8877 Coq.Init.Datatypes <> nat ind
R8863:8865 Coq.Init.Datatypes <> nat ind
R8851:8853 Coq.Init.Datatypes <> nat ind
def 8962:8969 <> list123'
R8976:8979 Poly <> cons constr
R8986:8989 Poly <> cons constr
R8996:8999 Poly <> cons constr
R9006:9008 Poly <> nil constr
R9625:9627 Poly <> nil constr
R9625:9627 Poly <> nil constr
R9644:9647 Poly <> cons constr
R9644:9647 Poly <> cons constr
R9668:9673 Poly <> repeat def
R9668:9673 Poly <> repeat def
def 9760:9768 <> list123''
R9773:9776 Poly <> cons constr
R9781:9784 Poly <> cons constr
R9789:9792 Poly <> cons constr
R9796:9798 Poly <> nil constr
def 9970:9978 <> repeat'''
R9996:9996 Poly <> X var
R10008:10010 Coq.Init.Datatypes <> nat ind
R10015:10018 Poly <> list ind
R10020:10020 Poly <> X var
R10033:10037 Poly <> count var
R10060:10062 Poly <> nil constr
R10068:10068 Coq.Init.Datatypes <> S constr
R10080:10083 Poly <> cons constr
R10088:10096 Poly <> repeat''' def
R10098:10098 Poly <> x var
R10085:10085 Poly <> x var
ind 10701:10705 <> list'
constr 10730:10733 <> nil'
constr 10747:10751 <> cons'
R10737:10741 Poly <> list' ind
R10756:10759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10765:10768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10769:10773 Poly <> list' ind
R10760:10764 Poly <> list' ind
def 11209:11211 <> app
R11233:11236 Poly <> list ind
R11238:11238 Poly <> X var
R11257:11260 Poly <> list ind
R11262:11262 Poly <> X var
R11276:11277 Poly <> l1 var
R11288:11290 Poly <> nil constr
R11300:11301 Poly <> l2 var
R11307:11310 Poly <> cons constr
R11319:11322 Poly <> cons constr
R11327:11329 Poly <> app def
R11333:11334 Poly <> l2 var
def 11354:11356 <> rev
R11370:11373 Poly <> list ind
R11375:11375 Poly <> X var
R11380:11383 Poly <> list ind
R11385:11385 Poly <> X var
R11398:11398 Poly <> l var
R11409:11411 Poly <> nil constr
R11421:11423 Poly <> nil constr
R11429:11432 Poly <> cons constr
R11441:11443 Poly <> app def
R11454:11457 Poly <> cons constr
R11461:11463 Poly <> nil constr
R11446:11448 Poly <> rev def
def 11483:11488 <> length
R11506:11509 Poly <> list ind
R11511:11511 Poly <> X var
R11516:11518 Coq.Init.Datatypes <> nat ind
R11531:11531 Poly <> l var
R11542:11544 Poly <> nil constr
R11555:11558 Poly <> cons constr
R11568:11568 Coq.Init.Datatypes <> S constr
R11571:11576 Poly <> length def
def 11598:11606 <> test_rev1
R11637:11640 Coq.Init.Logic <> :type_scope:x_'='_x not
R11660:11660 Coq.Init.Logic <> :type_scope:x_'='_x not
R11612:11614 Poly <> rev def
R11617:11620 Poly <> cons constr
R11625:11628 Poly <> cons constr
R11632:11634 Poly <> nil constr
R11641:11644 Poly <> cons constr
R11649:11652 Poly <> cons constr
R11656:11658 Poly <> nil constr
def 11698:11706 <> test_rev2
R11730:11732 Coq.Init.Logic <> :type_scope:x_'='_x not
R11711:11713 Poly <> rev def
R11716:11719 Poly <> cons constr
R11726:11728 Poly <> nil constr
R11721:11724 Basics <> true constr
R11733:11736 Poly <> cons constr
R11743:11745 Poly <> nil constr
R11738:11741 Basics <> true constr
def 11783:11794 <> test_length1
R11834:11836 Coq.Init.Logic <> :type_scope:x_'='_x not
R11797:11802 Poly <> length def
R11805:11808 Poly <> cons constr
R11813:11816 Poly <> cons constr
R11821:11824 Poly <> cons constr
R11828:11830 Poly <> nil constr
def 12190:12194 <> mynil
R12199:12201 Poly <> nil constr
def 12768:12772 <> mynil
R12776:12779 Poly <> list ind
R12781:12783 Coq.Init.Datatypes <> nat ind
R12788:12790 Poly <> nil constr
R12919:12921 Poly <> nil constr
def 12936:12941 <> mynil'
R12947:12949 Poly <> nil constr
R12951:12953 Coq.Init.Datatypes <> nat ind
R13235:13238 Poly <> cons constr
not 13222:13222 <> ::x_'::'_x
R13320:13322 Poly <> nil constr
not 13311:13311 <> ::'['_']'
R13355:13358 Poly <> cons constr
R13366:13369 Poly <> cons constr
R13373:13374 Poly <> ::'['_']' not
not 13334:13334 <> ::'['_x_';'_'..'_';'_x_']'
R13404:13406 Poly <> app def
not 13391:13391 <> ::x_'++'_x
def 13539:13548 <> list123'''
R13553:13553 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13555:13556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13558:13559 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13561:13561 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 13869:13877 <> app_nil_r
R13907:13910 Poly <> list ind
R13912:13912 Poly <> X var
R13924:13926 Coq.Init.Logic <> :type_scope:x_'='_x not
R13918:13921 Poly <> ::x_'++'_x not
R13917:13917 Poly <> l var
R13922:13923 Poly <> ::'['_']' not
R13927:13927 Poly <> l var
prf 13977:13985 <> app_assoc
R14005:14008 Poly <> list ind
R14010:14010 Poly <> A var
R14027:14029 Coq.Init.Logic <> :type_scope:x_'='_x not
R14017:14020 Poly <> ::x_'++'_x not
R14016:14016 Poly <> l var
R14022:14025 Poly <> ::x_'++'_x not
R14021:14021 Poly <> m var
R14026:14026 Poly <> n var
R14030:14030 Poly <> ::x_'++'_x not
R14037:14041 Poly <> ::x_'++'_x not
R14032:14035 Poly <> ::x_'++'_x not
R14031:14031 Poly <> l var
R14036:14036 Poly <> m var
R14042:14042 Poly <> n var
prf 14090:14099 <> app_length
R14128:14131 Poly <> list ind
R14133:14133 Poly <> X var
R14156:14158 Coq.Init.Logic <> :type_scope:x_'='_x not
R14139:14144 Poly <> length def
R14149:14152 Poly <> ::x_'++'_x not
R14147:14148 Poly <> l1 var
R14153:14154 Poly <> l2 var
R14168:14170 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14159:14164 Poly <> length def
R14166:14167 Poly <> l1 var
R14171:14176 Poly <> length def
R14178:14179 Poly <> l2 var
prf 14358:14370 <> rev_app_distr
R14391:14394 Poly <> list ind
R14396:14396 Poly <> X var
R14416:14418 Coq.Init.Logic <> :type_scope:x_'='_x not
R14402:14404 Poly <> rev def
R14409:14412 Poly <> ::x_'++'_x not
R14407:14408 Poly <> l1 var
R14413:14414 Poly <> l2 var
R14425:14428 Poly <> ::x_'++'_x not
R14419:14421 Poly <> rev def
R14423:14424 Poly <> l2 var
R14429:14431 Poly <> rev def
R14433:14434 Poly <> l1 var
prf 14484:14497 <> rev_involutive
R14529:14532 Poly <> list ind
R14534:14534 Poly <> X var
R14550:14552 Coq.Init.Logic <> :type_scope:x_'='_x not
R14539:14541 Poly <> rev def
R14544:14546 Poly <> rev def
R14548:14548 Poly <> l var
R14553:14553 Poly <> l var
ind 14897:14900 <> prod
constr 14927:14930 <> pair
R14935:14938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14940:14943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14944:14947 Poly <> prod ind
R14965:14968 Poly <> pair constr
R14965:14968 Poly <> pair constr
R15115:15118 Poly <> pair constr
not 15099:15099 <> ::'('_x_','_x_')'
R15254:15257 Poly <> prod ind
not 15242:15242 <> :type_scope:x_'*'_x
def 15856:15858 <> fst
R15879:15881 Poly <> :type_scope:x_'*'_x not
R15878:15878 Poly <> X var
R15882:15882 Poly <> Y var
R15887:15887 Poly <> X var
R15900:15900 Poly <> p var
R15911:15911 Poly <> ::'('_x_','_x_')' not
R15913:15914 Poly <> ::'('_x_','_x_')' not
R15916:15916 Poly <> ::'('_x_','_x_')' not
def 15942:15944 <> snd
R15965:15967 Poly <> :type_scope:x_'*'_x not
R15964:15964 Poly <> X var
R15968:15968 Poly <> Y var
R15973:15973 Poly <> Y var
R15986:15986 Poly <> p var
R15997:15997 Poly <> ::'('_x_','_x_')' not
R15999:16000 Poly <> ::'('_x_','_x_')' not
R16002:16002 Poly <> ::'('_x_','_x_')' not
def 16249:16255 <> combine
R16276:16279 Poly <> list ind
R16281:16281 Poly <> X var
R16290:16293 Poly <> list ind
R16295:16295 Poly <> Y var
R16311:16314 Poly <> list ind
R16318:16318 Poly <> :type_scope:x_'*'_x not
R16317:16317 Poly <> X var
R16319:16319 Poly <> Y var
R16337:16338 Poly <> ly var
R16333:16334 Poly <> lx var
R16349:16350 Poly <> ::'['_']' not
R16358:16359 Poly <> ::'['_']' not
R16368:16369 Poly <> ::'['_']' not
R16374:16375 Poly <> ::'['_']' not
R16382:16385 Poly <> ::x_'::'_x not
R16391:16394 Poly <> ::x_'::'_x not
R16407:16411 Poly <> ::x_'::'_x not
R16425:16425 Poly <> ::x_'::'_x not
R16401:16401 Poly <> ::'('_x_','_x_')' not
R16403:16404 Poly <> ::'('_x_','_x_')' not
R16406:16406 Poly <> ::'('_x_','_x_')' not
R16412:16418 Poly <> combine def
def 17121:17125 <> split
R17145:17148 Poly <> list ind
R17152:17152 Poly <> :type_scope:x_'*'_x not
R17151:17151 Poly <> X var
R17153:17153 Poly <> Y var
R17174:17174 Poly <> :type_scope:x_'*'_x not
R17181:17185 Poly <> :type_scope:x_'*'_x not
R17192:17192 Poly <> :type_scope:x_'*'_x not
R17175:17178 Poly <> list ind
R17180:17180 Poly <> X var
R17186:17189 Poly <> list ind
R17191:17191 Poly <> Y var
def 17272:17281 <> test_split
R17313:17315 Coq.Init.Logic <> :type_scope:x_'='_x not
R17286:17290 Poly <> split prfax
R17292:17292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17302:17302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17312:17312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17303:17303 Poly <> ::'('_x_','_x_')' not
R17305:17305 Poly <> ::'('_x_','_x_')' not
R17311:17311 Poly <> ::'('_x_','_x_')' not
R17306:17310 Basics <> false constr
R17293:17293 Poly <> ::'('_x_','_x_')' not
R17295:17295 Poly <> ::'('_x_','_x_')' not
R17301:17301 Poly <> ::'('_x_','_x_')' not
R17296:17300 Basics <> false constr
R17316:17316 Poly <> ::'('_x_','_x_')' not
R17322:17322 Poly <> ::'('_x_','_x_')' not
R17336:17336 Poly <> ::'('_x_','_x_')' not
R17317:17317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17319:17319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17321:17321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17323:17323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17329:17329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17335:17335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17330:17334 Basics <> false constr
R17324:17328 Basics <> false constr
ind 17625:17630 <> option
constr 17655:17658 <> Some
constr 17680:17683 <> None
R17663:17666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17667:17672 Poly <> option ind
R17687:17692 Poly <> option ind
R17708:17711 Poly <> Some constr
R17708:17711 Poly <> Some constr
R17730:17733 Poly <> None constr
R17730:17733 Poly <> None constr
def 17847:17855 <> nth_error
R17873:17876 Poly <> list ind
R17878:17878 Poly <> X var
R17886:17888 Coq.Init.Datatypes <> nat ind
R17912:17917 Poly <> option ind
R17919:17919 Poly <> X var
R17932:17932 Poly <> l var
R17943:17944 Poly <> ::'['_']' not
R17949:17952 Poly <> None constr
R17959:17962 Poly <> ::x_'::'_x not
R17972:17978 Basics <> beq_nat def
R17982:17982 Coq.Init.Datatypes <> O constr
R17980:17980 Poly <> n var
R18001:18009 Poly <> nth_error def
R18015:18018 Coq.Init.Peano <> pred syndef
R18020:18020 Poly <> n var
R17989:17992 Poly <> Some constr
def 18039:18053 <> test_nth_error1
R18078:18080 Coq.Init.Logic <> :type_scope:x_'='_x not
R18057:18065 Poly <> nth_error def
R18067:18067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18069:18069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18071:18071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18073:18073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18075:18075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18081:18084 Poly <> Some constr
def 18122:18136 <> test_nth_error2
R18161:18163 Coq.Init.Logic <> :type_scope:x_'='_x not
R18140:18148 Poly <> nth_error def
R18150:18150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18154:18154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18158:18158 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18155:18155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18157:18157 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18151:18151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18153:18153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18164:18167 Poly <> Some constr
R18169:18169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18171:18171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18207:18221 <> test_nth_error3
R18243:18245 Coq.Init.Logic <> :type_scope:x_'='_x not
R18225:18233 Poly <> nth_error def
R18235:18235 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18240:18240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18236:18239 Basics <> true constr
R18246:18249 Poly <> None constr
def 18505:18512 <> hd_error
R18530:18533 Poly <> list ind
R18535:18535 Poly <> X var
R18540:18545 Poly <> option ind
R18547:18547 Poly <> X var
R18746:18753 Poly <> hd_error prfax
def 18765:18778 <> test_hd_error1
R18796:18798 Coq.Init.Logic <> :type_scope:x_'='_x not
R18782:18789 Poly <> hd_error prfax
R18791:18791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18793:18793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18795:18795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18799:18802 Poly <> Some constr
def 18845:18858 <> test_hd_error2
R18881:18884 Coq.Init.Logic <> :type_scope:x_'='_x not
R18862:18869 Poly <> hd_error prfax
R18872:18872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18876:18876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18880:18880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18877:18877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18879:18879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18873:18873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18875:18875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18885:18888 Poly <> Some constr
R18890:18890 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18892:18892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19584:19593 <> doit3times
R19608:19609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19610:19610 Poly <> X var
R19607:19607 Poly <> X var
R19616:19616 Poly <> X var
R19621:19621 Poly <> X var
R19628:19628 Poly <> f var
R19631:19631 Poly <> f var
R19634:19634 Poly <> f var
R19636:19636 Poly <> n var
R19795:19804 Poly <> doit3times def
def 19876:19890 <> test_doit3times
R19914:19916 Coq.Init.Logic <> :type_scope:x_'='_x not
R19893:19902 Poly <> doit3times def
R19904:19911 Basics <> minustwo def
def 19955:19970 <> test_doit3times'
R19993:19995 Coq.Init.Logic <> :type_scope:x_'='_x not
R19973:19982 Poly <> doit3times def
R19989:19992 Basics <> true constr
R19984:19987 Basics <> negb def
R19996:20000 Basics <> false constr
def 20391:20396 <> filter
R20415:20416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20417:20420 Basics <> bool ind
R20414:20414 Poly <> X var
R20426:20429 Poly <> list ind
R20431:20431 Poly <> X var
R20453:20456 Poly <> list ind
R20458:20458 Poly <> X var
R20472:20472 Poly <> l var
R20483:20484 Poly <> ::'['_']' not
R20493:20494 Poly <> ::'['_']' not
R20501:20504 Poly <> ::x_'::'_x not
R20513:20516 Poly <> test var
R20581:20586 Poly <> filter def
R20588:20591 Poly <> test var
R20526:20530 Poly <> ::x_'::'_x not
R20544:20544 Poly <> ::x_'::'_x not
R20531:20536 Poly <> filter def
R20538:20541 Poly <> test var
def 20772:20783 <> test_filter1
R20808:20810 Coq.Init.Logic <> :type_scope:x_'='_x not
R20786:20791 Poly <> filter def
R20799:20799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20801:20801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20803:20803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20805:20805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20807:20807 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20793:20797 Basics <> evenb def
R20811:20811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20813:20813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20815:20815 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20856:20866 <> length_is_1
R20884:20887 Poly <> list ind
R20889:20889 Poly <> X var
R20894:20897 Basics <> bool ind
R20904:20910 Basics <> beq_nat def
R20913:20918 Poly <> length def
R20920:20920 Poly <> l var
def 20935:20946 <> test_filter2
R21021:21025 Coq.Init.Logic <> :type_scope:x_'='_x not
R20953:20958 Poly <> filter def
R20983:20984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20991:20992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20996:20997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21001:21002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21010:21011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21014:21015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21019:21020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21016:21016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21018:21018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21012:21013 Poly <> ::'['_']' not
R21003:21003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21005:21005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21007:21007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21009:21009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20998:20998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21000:21000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20993:20993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20995:20995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20985:20985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20987:20988 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20990:20990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20960:20970 Poly <> length_is_1 def
R21026:21027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21031:21032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21036:21037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21041:21042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21038:21038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21040:21040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21033:21033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21035:21035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21028:21028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21030:21030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21201:21216 <> countoddmembers'
R21221:21224 Poly <> list ind
R21226:21228 Coq.Init.Datatypes <> nat ind
R21233:21235 Coq.Init.Datatypes <> nat ind
R21242:21247 Poly <> length def
R21250:21255 Poly <> filter def
R21262:21262 Poly <> l var
R21257:21260 Basics <> oddb def
def 21275:21296 <> test_countoddmembers'1
R21331:21333 Coq.Init.Logic <> :type_scope:x_'='_x not
R21301:21316 Poly <> countoddmembers' def
R21318:21318 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21320:21320 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21322:21322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21324:21324 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21326:21326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21328:21328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21330:21330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21371:21392 <> test_countoddmembers'2
R21421:21423 Coq.Init.Logic <> :type_scope:x_'='_x not
R21397:21412 Poly <> countoddmembers' def
R21414:21414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21416:21416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21418:21418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21420:21420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21461:21482 <> test_countoddmembers'3
R21507:21509 Coq.Init.Logic <> :type_scope:x_'='_x not
R21487:21502 Poly <> countoddmembers' def
R21504:21506 Poly <> nil constr
def 22288:22301 <> test_anon_fun'
R22335:22337 Coq.Init.Logic <> :type_scope:x_'='_x not
R22306:22315 Poly <> doit3times def
R22328:22330 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22327:22327 Poly <> n var
R22331:22331 Poly <> n var
def 22578:22590 <> test_filter2'
R22685:22689 Coq.Init.Logic <> :type_scope:x_'='_x not
R22597:22602 Poly <> filter def
R22647:22648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22655:22656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22660:22661 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22665:22666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22674:22675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22678:22679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22683:22684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22680:22680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22682:22682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22676:22677 Poly <> ::'['_']' not
R22667:22667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22669:22669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22671:22671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22673:22673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22662:22662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22664:22664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22657:22657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22659:22659 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22649:22649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22651:22652 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22654:22654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22614:22620 Basics <> beq_nat def
R22623:22628 Poly <> length def
R22630:22630 Poly <> l var
R22690:22691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22695:22696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22700:22701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22705:22706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22702:22702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22704:22704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22697:22697 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22699:22699 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22692:22692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22694:22694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23008:23022 <> filter_even_gt7
R23029:23032 Poly <> list ind
R23034:23036 Coq.Init.Datatypes <> nat ind
R23041:23044 Poly <> list ind
R23046:23048 Coq.Init.Datatypes <> nat ind
def 23128:23149 <> test_filter_even_gt7_1
R23190:23192 Coq.Init.Logic <> :type_scope:x_'='_x not
R23155:23169 Poly <> filter_even_gt7 prfax
R23171:23171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23173:23173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23175:23175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23177:23177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23179:23179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23182:23182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23184:23184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23187:23187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23189:23189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23193:23193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23196:23196 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23199:23199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23201:23201 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23243:23264 <> test_filter_even_gt7_2
R23300:23302 Coq.Init.Logic <> :type_scope:x_'='_x not
R23270:23284 Poly <> filter_even_gt7 prfax
R23286:23286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23288:23288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23290:23290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23292:23292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23295:23295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23299:23299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23303:23304 Poly <> ::'['_']' not
def 23968:23976 <> partition
R24019:24022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24023:24026 Basics <> bool ind
R24018:24018 Poly <> X var
R24055:24058 Poly <> list ind
R24060:24060 Poly <> X var
R24090:24092 Poly <> :type_scope:x_'*'_x not
R24084:24087 Poly <> list ind
R24089:24089 Poly <> X var
R24093:24096 Poly <> list ind
R24098:24098 Poly <> X var
def 24178:24192 <> test_partition1
R24221:24223 Coq.Init.Logic <> :type_scope:x_'='_x not
R24195:24203 Poly <> partition prfax
R24210:24210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24212:24212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24214:24214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24216:24216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24218:24218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24220:24220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24205:24208 Basics <> oddb def
R24224:24224 Poly <> ::'('_x_','_x_')' not
R24232:24233 Poly <> ::'('_x_','_x_')' not
R24239:24239 Poly <> ::'('_x_','_x_')' not
R24225:24225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24227:24227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24229:24229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24231:24231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24234:24234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24236:24236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24238:24238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24279:24293 <> test_partition2
R24330:24332 Coq.Init.Logic <> :type_scope:x_'='_x not
R24296:24304 Poly <> partition prfax
R24323:24323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24325:24325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24327:24327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24329:24329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24316:24320 Basics <> false constr
R24333:24333 Poly <> ::'('_x_','_x_')' not
R24336:24337 Poly <> ::'('_x_','_x_')' not
R24345:24345 Poly <> ::'('_x_','_x_')' not
R24334:24335 Poly <> ::'['_']' not
R24338:24338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24340:24340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24342:24342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24344:24344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24545:24547 <> map
R24564:24565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24566:24566 Poly <> Y var
R24563:24563 Poly <> X var
R24572:24575 Poly <> list ind
R24577:24577 Poly <> X var
R24583:24586 Poly <> list ind
R24588:24588 Poly <> Y var
R24602:24602 Poly <> l var
R24613:24614 Poly <> ::'['_']' not
R24623:24624 Poly <> ::'['_']' not
R24631:24634 Poly <> ::x_'::'_x not
R24640:24640 Poly <> ::x_'::'_x not
R24644:24649 Poly <> ::x_'::'_x not
R24657:24657 Poly <> ::x_'::'_x not
R24641:24641 Poly <> f var
R24650:24652 Poly <> map def
R24654:24654 Poly <> f var
def 24874:24882 <> test_map1
R24916:24918 Coq.Init.Logic <> :type_scope:x_'='_x not
R24885:24887 Poly <> map def
R24909:24909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24911:24911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24913:24913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24915:24915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24899:24902 Coq.Init.Peano <> plus syndef
R24906:24906 Poly <> x var
R24919:24919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24921:24921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24923:24923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24925:24925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25219:25227 <> test_map2
R25250:25252 Coq.Init.Logic <> :type_scope:x_'='_x not
R25232:25234 Poly <> map def
R25241:25241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25243:25243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25245:25245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25247:25247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25249:25249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25236:25239 Basics <> oddb def
R25253:25253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25259:25259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25264:25264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25270:25270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25275:25275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25271:25274 Basics <> true constr
R25265:25269 Basics <> false constr
R25260:25263 Basics <> true constr
R25254:25258 Basics <> false constr
def 25464:25472 <> test_map3
R25520:25524 Coq.Init.Logic <> :type_scope:x_'='_x not
R25479:25481 Poly <> map def
R25511:25511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25513:25513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25515:25515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25517:25517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25519:25519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25493:25493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25501:25501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25508:25508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25502:25505 Basics <> oddb def
R25507:25507 Poly <> n var
R25494:25498 Basics <> evenb def
R25500:25500 Poly <> n var
R25525:25525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25538:25538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25551:25551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25564:25564 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25577:25577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25565:25565 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25571:25571 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25576:25576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25572:25575 Basics <> true constr
R25566:25570 Basics <> false constr
R25552:25552 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25557:25557 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25563:25563 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25558:25562 Basics <> false constr
R25553:25556 Basics <> true constr
R25539:25539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25545:25545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25550:25550 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25546:25549 Basics <> true constr
R25540:25544 Basics <> false constr
R25526:25526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25531:25531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25537:25537 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25532:25536 Basics <> false constr
R25527:25530 Basics <> true constr
prf 25842:25848 <> map_rev
R25878:25881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25882:25882 Poly <> Y var
R25877:25877 Poly <> X var
R25890:25893 Poly <> list ind
R25895:25895 Poly <> X var
R25914:25916 Coq.Init.Logic <> :type_scope:x_'='_x not
R25901:25903 Poly <> map def
R25908:25910 Poly <> rev def
R25912:25912 Poly <> l var
R25905:25905 Poly <> f var
R25917:25919 Poly <> rev def
R25922:25924 Poly <> map def
R25928:25928 Poly <> l var
R25926:25926 Poly <> f var
def 26444:26451 <> flat_map
R26468:26471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26472:26475 Poly <> list ind
R26477:26477 Poly <> Y var
R26467:26467 Poly <> X var
R26483:26486 Poly <> list ind
R26488:26488 Poly <> X var
R26513:26516 Poly <> list ind
R26518:26518 Poly <> Y var
def 26599:26612 <> test_flat_map1
R26652:26656 Coq.Init.Logic <> :type_scope:x_'='_x not
R26617:26624 Poly <> flat_map prfax
R26645:26645 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26647:26647 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26649:26649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26651:26651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26636:26636 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26638:26638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26640:26640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26642:26642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26641:26641 Poly <> n var
R26639:26639 Poly <> n var
R26637:26637 Poly <> n var
R26657:26657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26659:26660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26662:26663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26665:26666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26668:26669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26671:26672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26674:26675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26677:26678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26680:26681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26683:26683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26888:26897 <> option_map
R26918:26921 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26922:26922 Poly <> Y var
R26917:26917 Poly <> X var
R26931:26936 Poly <> option ind
R26938:26938 Poly <> X var
R26965:26970 Poly <> option ind
R26972:26972 Poly <> Y var
R26985:26986 Poly <> xo var
R26999:27002 Poly <> None constr
R27007:27010 Poly <> None constr
R27018:27021 Poly <> Some constr
R27028:27031 Poly <> Some constr
R27034:27034 Poly <> f var
def 27867:27870 <> fold
R27888:27889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27891:27892 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27893:27893 Poly <> Y var
R27890:27890 Poly <> Y var
R27887:27887 Poly <> X var
R27899:27902 Poly <> list ind
R27904:27904 Poly <> X var
R27910:27910 Poly <> Y var
R27940:27940 Poly <> Y var
R27953:27953 Poly <> l var
R27964:27966 Poly <> nil constr
R27971:27971 Poly <> b var
R27978:27981 Poly <> ::x_'::'_x not
R27987:27987 Poly <> f var
R27992:27995 Poly <> fold def
R28001:28001 Poly <> b var
R27997:27997 Poly <> f var
R28476:28479 Poly <> fold def
R28481:28484 Basics <> andb def
def 28546:28558 <> fold_example1
R28585:28587 Coq.Init.Logic <> :type_scope:x_'='_x not
R28564:28567 Poly <> fold def
R28574:28574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28576:28576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28578:28578 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28580:28580 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28582:28582 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28569:28572 Coq.Init.Peano <> mult syndef
def 28626:28638 <> fold_example2
R28681:28683 Coq.Init.Logic <> :type_scope:x_'='_x not
R28644:28647 Poly <> fold def
R28677:28680 Basics <> true constr
R28654:28654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28659:28659 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28664:28664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28670:28670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28675:28675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28671:28674 Basics <> true constr
R28665:28669 Basics <> false constr
R28660:28663 Basics <> true constr
R28655:28658 Basics <> true constr
R28649:28652 Basics <> andb def
R28684:28688 Basics <> false constr
def 28725:28737 <> fold_example3
R28774:28776 Coq.Init.Logic <> :type_scope:x_'='_x not
R28743:28746 Poly <> fold def
R28772:28773 Poly <> ::'['_']' not
R28753:28753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28757:28757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28760:28760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28766:28766 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28770:28770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28767:28767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28769:28769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28761:28761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28763:28763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28765:28765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28758:28759 Poly <> ::'['_']' not
R28754:28754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28756:28756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28748:28750 Poly <> app def
R28777:28777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28779:28779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28781:28781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28783:28783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28785:28785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29702:29709 <> constfun
R29725:29725 Poly <> X var
R29733:29734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29735:29735 Poly <> X var
R29730:29732 Coq.Init.Datatypes <> nat ind
R29749:29751 Coq.Init.Datatypes <> nat ind
R29757:29757 Poly <> x var
def 29772:29776 <> ftrue
R29781:29788 Poly <> constfun def
R29790:29793 Basics <> true constr
def 29805:29821 <> constfun_example1
R29832:29834 Coq.Init.Logic <> :type_scope:x_'='_x not
R29825:29829 Poly <> ftrue def
R29835:29838 Basics <> true constr
def 29875:29891 <> constfun_example2
R29910:29912 Coq.Init.Logic <> :type_scope:x_'='_x not
R29896:29903 Poly <> constfun def
R30114:30117 Coq.Init.Peano <> plus syndef
def 30728:30732 <> plus3
R30737:30740 Coq.Init.Peano <> plus syndef
R30751:30755 Poly <> plus3 def
def 30767:30776 <> test_plus3
R30790:30792 Coq.Init.Logic <> :type_scope:x_'='_x not
R30783:30787 Poly <> plus3 def
def 30830:30840 <> test_plus3'
R30864:30866 Coq.Init.Logic <> :type_scope:x_'='_x not
R30846:30855 Poly <> doit3times def
R30857:30861 Poly <> plus3 def
def 30904:30915 <> test_plus3''
R30941:30943 Coq.Init.Logic <> :type_scope:x_'='_x not
R30920:30929 Poly <> doit3times def
R30932:30935 Coq.Init.Peano <> plus syndef
mod 31084:31092 <> Exercises
def 31294:31304 Exercises fold_length
R31322:31325 Poly Exercises list ind
R31327:31327 Poly <> X var
R31332:31334 Coq.Init.Datatypes <> nat ind
R31341:31344 Poly Exercises fold def
R31363:31363 Poly <> l var
R31358:31358 Coq.Init.Datatypes <> S constr
R31360:31360 Poly <> n var
def 31377:31393 Exercises test_fold_length1
R31416:31418 Coq.Init.Logic <> :type_scope:x_'='_x not
R31397:31407 Poly Exercises fold_length def
R31409:31409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31411:31411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31413:31413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31415:31415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 31504:31522 Exercises fold_length_correct
R31540:31543 Poly Exercises list ind
R31545:31545 Poly <> X var
R31564:31566 Coq.Init.Logic <> :type_scope:x_'='_x not
R31551:31561 Poly Exercises fold_length def
R31563:31563 Poly <> l var
R31567:31572 Poly Exercises length def
R31574:31574 Poly <> l var
def 31753:31760 Exercises fold_map
R31779:31782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31783:31783 Poly <> Y var
R31778:31778 Poly <> X var
R31791:31794 Poly Exercises list ind
R31796:31796 Poly <> X var
R31801:31804 Poly Exercises list ind
R31806:31806 Poly <> Y var
def 32817:32826 Exercises prod_curry
R32855:32858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32859:32859 Poly <> Z var
R32851:32853 Poly <> :type_scope:x_'*'_x not
R32850:32850 Poly <> X var
R32854:32854 Poly <> Y var
R32867:32867 Poly <> X var
R32875:32875 Poly <> Y var
R32880:32880 Poly <> Z var
R32885:32885 Poly <> f var
R32887:32887 Poly <> ::'('_x_','_x_')' not
R32889:32890 Poly <> ::'('_x_','_x_')' not
R32892:32892 Poly <> ::'('_x_','_x_')' not
R32888:32888 Poly <> x var
R32891:32891 Poly <> y var
def 33037:33048 Exercises prod_uncurry
R33073:33076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33078:33081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33082:33082 Poly <> Z var
R33077:33077 Poly <> Y var
R33072:33072 Poly <> X var
R33091:33093 Poly <> :type_scope:x_'*'_x not
R33090:33090 Poly <> X var
R33094:33094 Poly <> Y var
R33099:33099 Poly <> Z var
def 33307:33315 Exercises test_map2
R33349:33351 Coq.Init.Logic <> :type_scope:x_'='_x not
R33318:33320 Poly Exercises map def
R33342:33342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33344:33344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33346:33346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33348:33348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33332:33335 Coq.Init.Peano <> plus syndef
R33339:33339 Poly <> x var
R33352:33352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33354:33354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33356:33356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33358:33358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33528:33537 Poly Exercises prod_curry def
R33547:33558 Poly Exercises prod_uncurry prfax
prf 33570:33582 Exercises uncurry_curry
R33638:33641 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33643:33646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33647:33647 Poly <> Z var
R33642:33642 Poly <> Y var
R33637:33637 Poly <> X var
R33712:33714 Coq.Init.Logic <> :type_scope:x_'='_x not
R33681:33690 Poly Exercises prod_curry def
R33711:33711 Poly <> y var
R33709:33709 Poly <> x var
R33693:33704 Poly Exercises prod_uncurry prfax
R33706:33706 Poly <> f var
R33715:33715 Poly <> f var
R33719:33719 Poly <> y var
R33717:33717 Poly <> x var
prf 33769:33781 Exercises curry_uncurry
R33836:33836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33842:33846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33847:33847 Poly <> Z var
R33838:33840 Poly <> :type_scope:x_'*'_x not
R33837:33837 Poly <> X var
R33841:33841 Poly <> Y var
R33856:33858 Poly <> :type_scope:x_'*'_x not
R33855:33855 Poly <> X var
R33859:33859 Poly <> Y var
R33894:33896 Coq.Init.Logic <> :type_scope:x_'='_x not
R33865:33876 Poly Exercises prod_uncurry prfax
R33893:33893 Poly <> p var
R33879:33888 Poly Exercises prod_curry def
R33890:33890 Poly <> f var
R33897:33897 Poly <> f var
R33899:33899 Poly <> p var
mod 34774:34779 <> Exercises.Church
def 34793:34795 Exercises.Church nat
R34817:34817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34824:34828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34830:34833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34834:34834 Poly <> X var
R34829:34829 Poly <> X var
R34819:34822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34823:34823 Poly <> X var
R34818:34818 Poly <> X var
def 34990:34992 Exercises.Church one
R34996:34998 Poly Exercises.Church nat def
R35026:35029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35030:35030 Poly <> X var
R35025:35025 Poly <> X var
R35038:35038 Poly <> X var
R35044:35044 Poly <> f var
R35046:35046 Poly <> x var
def 35126:35128 Exercises.Church two
R35132:35134 Poly Exercises.Church nat def
R35162:35165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35166:35166 Poly <> X var
R35161:35161 Poly <> X var
R35174:35174 Poly <> X var
R35180:35180 Poly <> f var
R35183:35183 Poly <> f var
R35185:35185 Poly <> x var
def 35365:35368 Exercises.Church zero
R35372:35374 Poly Exercises.Church nat def
R35402:35405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35406:35406 Poly <> X var
R35401:35401 Poly <> X var
R35414:35414 Poly <> X var
R35420:35420 Poly <> x var
def 35695:35699 Exercises.Church three
R35703:35705 Poly Exercises.Church nat def
R35711:35720 Poly Exercises.Church doit3times def
def 35928:35931 Exercises.Church succ
R35938:35940 Poly Exercises.Church nat def
R35945:35947 Poly Exercises.Church nat def
def 36027:36032 Exercises.Church succ_1
R36045:36047 Coq.Init.Logic <> :type_scope:x_'='_x not
R36036:36039 Poly Exercises.Church succ prfax
R36041:36044 Poly Exercises.Church zero def
R36048:36050 Poly Exercises.Church one def
def 36098:36103 Exercises.Church succ_2
R36115:36117 Coq.Init.Logic <> :type_scope:x_'='_x not
R36107:36110 Poly Exercises.Church succ prfax
R36112:36114 Poly Exercises.Church one def
R36118:36120 Poly Exercises.Church two def
def 36168:36173 Exercises.Church succ_3
R36185:36187 Coq.Init.Logic <> :type_scope:x_'='_x not
R36177:36180 Poly Exercises.Church succ prfax
R36182:36184 Poly Exercises.Church two def
R36188:36192 Poly Exercises.Church three def
def 36284:36287 Exercises.Church plus
R36296:36298 Poly Exercises.Church nat def
R36303:36305 Poly Exercises.Church nat def
def 36385:36390 Exercises.Church plus_1
R36407:36409 Coq.Init.Logic <> :type_scope:x_'='_x not
R36394:36397 Poly Exercises.Church plus prfax
R36404:36406 Poly Exercises.Church one def
R36399:36402 Poly Exercises.Church zero def
R36410:36412 Poly Exercises.Church one def
def 36460:36465 Exercises.Church plus_2
R36483:36485 Coq.Init.Logic <> :type_scope:x_'='_x not
R36469:36472 Poly Exercises.Church plus prfax
R36478:36482 Poly Exercises.Church three def
R36474:36476 Poly Exercises.Church two def
R36486:36489 Poly Exercises.Church plus prfax
R36497:36499 Poly Exercises.Church two def
R36491:36495 Poly Exercises.Church three def
def 36547:36552 Exercises.Church plus_3
R36583:36585 Coq.Init.Logic <> :type_scope:x_'='_x not
R36558:36561 Poly Exercises.Church plus prfax
R36578:36582 Poly Exercises.Church three def
R36564:36567 Poly Exercises.Church plus prfax
R36573:36575 Poly Exercises.Church two def
R36569:36571 Poly Exercises.Church two def
R36586:36589 Poly Exercises.Church plus prfax
R36596:36599 Poly Exercises.Church plus prfax
R36607:36611 Poly Exercises.Church three def
R36601:36605 Poly Exercises.Church three def
R36591:36593 Poly Exercises.Church one def
def 36687:36690 Exercises.Church mult
R36699:36701 Poly Exercises.Church nat def
R36706:36708 Poly Exercises.Church nat def
def 36788:36793 Exercises.Church mult_1
R36809:36811 Coq.Init.Logic <> :type_scope:x_'='_x not
R36797:36800 Poly Exercises.Church mult prfax
R36806:36808 Poly Exercises.Church one def
R36802:36804 Poly Exercises.Church one def
R36812:36814 Poly Exercises.Church one def
def 36862:36867 Exercises.Church mult_2
R36899:36901 Coq.Init.Logic <> :type_scope:x_'='_x not
R36871:36874 Poly Exercises.Church mult prfax
R36882:36885 Poly Exercises.Church plus prfax
R36893:36897 Poly Exercises.Church three def
R36887:36891 Poly Exercises.Church three def
R36876:36879 Poly Exercises.Church zero def
R36902:36905 Poly Exercises.Church zero def
def 36953:36958 Exercises.Church mult_3
R36976:36978 Coq.Init.Logic <> :type_scope:x_'='_x not
R36962:36965 Poly Exercises.Church mult prfax
R36971:36975 Poly Exercises.Church three def
R36967:36969 Poly Exercises.Church two def
R36979:36982 Poly Exercises.Church plus prfax
R36990:36994 Poly Exercises.Church three def
R36984:36988 Poly Exercises.Church three def
def 37324:37326 Exercises.Church exp
R37335:37337 Poly Exercises.Church nat def
R37342:37344 Poly Exercises.Church nat def
def 37424:37428 Exercises.Church exp_1
R37443:37445 Coq.Init.Logic <> :type_scope:x_'='_x not
R37432:37434 Poly Exercises.Church exp prfax
R37440:37442 Poly Exercises.Church two def
R37436:37438 Poly Exercises.Church two def
R37446:37449 Poly Exercises.Church plus prfax
R37455:37457 Poly Exercises.Church two def
R37451:37453 Poly Exercises.Church two def
def 37505:37509 Exercises.Church exp_2
R37526:37528 Coq.Init.Logic <> :type_scope:x_'='_x not
R37513:37515 Poly Exercises.Church exp prfax
R37523:37525 Poly Exercises.Church two def
R37517:37521 Poly Exercises.Church three def
R37529:37532 Poly Exercises.Church plus prfax
R37560:37562 Poly Exercises.Church one def
R37535:37538 Poly Exercises.Church mult prfax
R37545:37548 Poly Exercises.Church mult prfax
R37554:37556 Poly Exercises.Church two def
R37550:37552 Poly Exercises.Church two def
R37540:37542 Poly Exercises.Church two def
def 37610:37614 Exercises.Church exp_3
R37632:37634 Coq.Init.Logic <> :type_scope:x_'='_x not
R37618:37620 Poly Exercises.Church exp prfax
R37628:37631 Poly Exercises.Church zero def
R37622:37626 Poly Exercises.Church three def
R37635:37637 Poly Exercises.Church one def
R37681:37686 Poly Exercises.Church <> mod
R37704:37712 Poly Exercises <> mod
